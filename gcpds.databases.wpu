#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
cache.last-mime-type = {loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/DUMMY/__init__.py'): 'text/x-python',
                        loc('../../../../../Development/GCPDS/python-gcpds.databases/test/test.py'): 'text/x-python'}
debug.breakpoints = {loc('gcpds/databases/EEG_data_raw/__init__.py'): {144: (0,
        None,
        1,
        0)},
                     loc('test/test.py'): {15: (0,
        None,
        1,
        0)}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Bcbqr2CDPglIvYWx9t597eE4fu2X28OA',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.3079331941544885,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (0,
         0),
        (0,
         0,
         1),
        (0,
         0,
         3),
        (0,
         0,
         4),
        (0,
         0,
         5),
        (1,),
        (1,
         0),
        (1,
         0,
         2)],
                                 'selected-nodes': [(0,
        0,
        5)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        'c': [],
        'django': [],
        'html': [],
        'py': []}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../../Development/BCI-Framework/venv/lib/python3.9/site-packages/scipy/io/matlab/mio.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Development/BCI-Framework/venv/lib/python3.9/site-packages/scipy/io/matlab/mio.py'),
                      'loadmat')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/Auditory_processing/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/Auditory_processing/__init__.py'),
                      'CallableModule')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/Auditory_processing/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/BCI_Competition_IV/Dataset_2a/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/BCI_Competition_IV/Dataset_2a/__init__.py'),
                      'CallableModule')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/BCI_Competition_IV/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/DUMMY/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/DUMMY/__init__.py'),
                      'CallableModule')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/DUMMY/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/MI/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/__init__.py'),
                      'ERP')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_MI_ME/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_MI_ME/__init__.py'),
                      'CallableModule')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_MI_ME/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/HighGamma_ME/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/HighGamma_ME/__init__.py'),
                      'CallableModule')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/HighGamma_ME/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/PhysioNet_MI_ME/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/PhysioNet_MI_ME/__init__.py'),
                      'CallableModule')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/PhysioNet_MI_ME/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/base.py'),
                      '')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/base.py'),
                      'ALL')]},
        loc('../../../../../Development/GCPDS/python-gcpds.databases/test/test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Development/GCPDS/python-gcpds.databases/test/test.py'),
                      'db')]},
        loc('../../../../../usr/lib/python3.9/json/decoder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../usr/lib/python3.9/json/decoder.py'),
                      'BACKSLASH')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'def non_task',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 's01',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 22,
                       'folded-linenos': [],
                       'history': {'file:/home/yeison/Development/GCPDS/python-gcpds.databases/test/test.py': ['cls.shape\n',
        'data.shape\n',
        'cls\n']},
                       'launch-id': None,
                       'sel-line': 29,
                       'sel-line-start': 1386,
                       'selection_end': 1386,
                       'selection_start': 1386,
                       'zoom': 0}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3,
                       'sel-line-start': 131,
                       'selection_end': 131,
                       'selection_start': 131,
                       'zoom': 0}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('gcpds/databases/base/base.py'),
        {'attrib-starts': [('DatabaseBase|0|',
                            124)],
         'code-line': '    def get_run(self, run: int, classes: Union[int, str], channels=Union[int, str], reject_bad_trials: Optional[bool] = True) -> np.ndarray:\n',
         'first-line': 181,
         'folded-linenos': [],
         'sel-line': 202,
         'sel-line-start': 7343,
         'selection_end': 8932,
         'selection_start': 7424,
         'zoom': 0},
        1627919452.065829],
        [loc('gcpds/databases/base/base.py'),
         {'attrib-starts': [('DatabaseBase|0|',
                             124),
                            ('DatabaseBase|0|.test_integrity|0|',
                             367)],
          'code-line': "        if 'runs_training' in self.metadata:\n",
          'first-line': 349,
          'folded-linenos': [],
          'sel-line': 371,
          'sel-line-start': 14134,
          'selection_end': 14177,
          'selection_start': 14169,
          'zoom': 0},
         1627919452.478031],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12),
                            ('Database|0|.load_subject|0|',
                             51)],
          'code-line': '        self.data = super().load_subject(subject, mode)\n',
          'first-line': 55,
          'folded-linenos': [],
          'sel-line': 68,
          'sel-line-start': 2407,
          'selection_end': 2462,
          'selection_start': 2462,
          'zoom': 0},
         1627919455.5286763],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12),
                            ('Database|0|.load_subject|0|',
                             51)],
          'code-line': '        self.data = super().load_subject(subject, mode)\n',
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 68,
          'sel-line-start': 2407,
          'selection_end': 2462,
          'selection_start': 2462,
          'zoom': 0},
         1627919465.0816197],
        [loc('gcpds/databases/base/base.py'),
         {'attrib-starts': [('DatabaseBase|0|',
                             124)],
          'code-line': '    def get_run(self, run: int, classes: Union[int, str], channels=Union[int, str], reject_bad_trials: Optional[bool] = True) -> np.ndarray:\n',
          'first-line': 181,
          'folded-linenos': [],
          'sel-line': 202,
          'sel-line-start': 7343,
          'selection_end': 8932,
          'selection_start': 7424,
          'zoom': 0},
         1627919471.9939754],
        [loc('gcpds/databases/base/base.py'),
         {'attrib-starts': [('DatabaseBase|0|',
                             124),
                            ('DatabaseBase|0|.get_run|0|',
                             202)],
          'code-line': '\n',
          'first-line': 363,
          'folded-linenos': [],
          'sel-line': 213,
          'sel-line-start': 7936,
          'selection_end': 7936,
          'selection_start': 7936,
          'zoom': 0},
         1627919481.6159506],
        [loc('gcpds/databases/base/base.py'),
         {'attrib-starts': [('DatabaseBase|0|',
                             124),
                            ('DatabaseBase|0|.get_run|0|',
                             202)],
          'code-line': '\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 213,
          'sel-line-start': 7936,
          'selection_end': 7936,
          'selection_start': 7936,
          'zoom': 0},
         1627919482.2022343],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12)],
          'code-line': "        'runs_training': [1] * 23,\n",
          'first-line': 23,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1333,
          'selection_end': 1355,
          'selection_start': 1342,
          'zoom': 0},
         1627919494.016883],
        [loc('gcpds/databases/base/google_drive_downloader.py'),
         {'attrib-starts': [],
          'code-line': 'import requests\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1627919495.1253912],
        [loc('test/test.py'),
         {'attrib-starts': [],
          'code-line': 'db.test_integrity()\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 14,
          'sel-line-start': 187,
          'selection_end': 187,
          'selection_start': 187,
          'zoom': -1},
         1627919544.0822074],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12)],
          'code-line': "        'channels': ['Fp1', 'AF7', 'AF3', 'F1', 'F3', 'F5', 'F7', 'FT7', 'FC5', 'FC3', 'FC1',\n",
          'first-line': 7,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 374,
          'selection_end': 426,
          'selection_start': 394,
          'zoom': 0},
         1627919549.0273151],
        [loc('gcpds/databases/base/google_drive_downloader.py'),
         {'attrib-starts': [],
          'code-line': 'import requests\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1627919550.1743276],
        [loc('gcpds/databases/EEG_data_raw/fids.json'),
         {'attrib-starts': [],
          'code-line': '{\n',
          'first-line': 13,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1627919550.6055703],
        [loc('test/test.py'),
         {'attrib-starts': [],
          'code-line': 'db.test_integrity()\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 14,
          'sel-line-start': 211,
          'selection_end': 211,
          'selection_start': 211,
          'zoom': -1},
         1627919618.1646457],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12)],
          'code-line': "        'channels': ['Fp1', 'AF7', 'AF3', 'F1', 'F3', 'F5', 'F7', 'FT7', 'FC5', 'FC3', 'FC1',\n",
          'first-line': 7,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 374,
          'selection_end': 426,
          'selection_start': 394,
          'zoom': 0},
         1627919628.9987185],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12)],
          'code-line': '                classes: list = ALL,\n',
          'first-line': 69,
          'folded-linenos': [],
          'sel-line': 73,
          'sel-line-start': 2589,
          'selection_end': 2612,
          'selection_start': 2605,
          'zoom': 0},
         1627919633.9973063],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12),
                            ('Database|0|.get_run|0|',
                             71)],
          'code-line': '        return np.array(data__), labels\n',
          'first-line': 106,
          'folded-linenos': [],
          'sel-line': 142,
          'sel-line-start': 5369,
          'selection_end': 5408,
          'selection_start': 5402,
          'zoom': 0},
         1627919670.6388724],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12),
                            ('Database|0|.get_run|0|',
                             71)],
          'code-line': '        return np.array(data__), labels\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 142,
          'sel-line-start': 5369,
          'selection_end': 5408,
          'selection_start': 5402,
          'zoom': 0},
         1627919674.8987348],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12),
                            ('Database|0|.get_run|0|',
                             71)],
          'code-line': '            data__.append(Xdata[:, int(i[0]):int(i[1])])\n',
          'first-line': 127,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 5367,
          'selection_end': 5379,
          'selection_start': 5379,
          'zoom': 0},
         1627920890.4970043],
        [loc('gcpds/databases/EEG_data_raw/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             12),
                            ('Database|0|.get_run|0|',
                             71)],
          'code-line': '            data__.append(Xdata[:, int(i[0]):int(i[1])])\n',
          'first-line': 90,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 5367,
          'selection_end': 5379,
          'selection_start': 5379,
          'zoom': 0},
         1627920893.0597804]],
        20),
        'current-loc': loc('gcpds/databases/EEG_data_raw/__init__.py'),
        'editor-state-list': [(loc('gcpds/databases/base/base.py'),
                               {'attrib-starts': [('DatabaseBase|0|',
        124),
        ('DatabaseBase|0|.get_run|0|',
         202)],
                                'code-line': '\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 213,
                                'sel-line-start': 7936,
                                'selection_end': 7936,
                                'selection_start': 7936,
                                'zoom': 0}),
                              (loc('gcpds/databases/EEG_data_raw/__init__.py'),
                               {'attrib-starts': [('Database|0|',
        12),
        ('Database|0|.get_run|0|',
         71)],
                                'code-line': '        labels = np.zeros(Ntrials, dtype = int)\n',
                                'first-line': 116,
                                'folded-linenos': [],
                                'sel-line': 119,
                                'sel-line-start': 4489,
                                'selection_end': 4535,
                                'selection_start': 4535,
                                'zoom': 0}),
                              (loc('gcpds/databases/EEG_data_raw/fids.json'),
                               {'attrib-starts': [],
                                'code-line': '{\n',
                                'first-line': 13,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 0,
                                'selection_start': 0,
                                'zoom': 0}),
                              (loc('gcpds/databases/base/google_drive_downloader.py'),
                               {'attrib-starts': [],
                                'code-line': 'import requests\n',
                                'first-line': 12,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 0,
                                'selection_start': 0,
                                'zoom': 0}),
                              (loc('test/test.py'),
                               {'attrib-starts': [],
                                'code-line': 'db.test_integrity()\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 14,
                                'sel-line-start': 211,
                                'selection_end': 211,
                                'selection_start': 211,
                                'zoom': -1})],
        'has-focus': True,
        'locked': False},
        [loc('gcpds/databases/base/base.py'),
         loc('gcpds/databases/EEG_data_raw/__init__.py'),
         loc('gcpds/databases/EEG_data_raw/fids.json'),
         loc('gcpds/databases/base/google_drive_downloader.py'),
         loc('test/test.py')]),
                               'open_files': ['gcpds/databases/base/base.py',
        'gcpds/databases/base/google_drive_downloader.py',
        'gcpds/databases/EEG_data_raw/fids.json',
        'test/test.py',
        'gcpds/databases/EEG_data_raw/__init__.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.2329803328290469},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           5),
                          1627920970.186581),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.4633879781420765},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1626400236.403142),
                 'user_data': {}},
        'window-alloc': (416,
                         204,
                         1278,
                         699)}]}
guimgr.recent-documents = [loc('gcpds/databases/EEG_data_raw/__init__.py'),
                           loc('test/test.py'),
                           loc('gcpds/databases/EEG_data_raw/fids.json'),
                           loc('gcpds/databases/base/google_drive_downloader.py'),
                           loc('gcpds/databases/base/base.py')]
guimgr.visual-state = {loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/Auditory_processing/__init__.py'): {'attrib-starts': [('Database|0|',
        11)],
        'code-line': '                          1, 1, 1],\n',
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1087,
        'selection_end': 1122,
        'selection_start': 1122,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/Auditory_processing/fids.json'): {'attrib-starts': [],
        'code-line': '  }\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 96,
        'sel-line-start': 2360,
        'selection_end': 2363,
        'selection_start': 2363,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/BCI_Competition_IV/Dataset_2a/__init__.py'): {'attrib-starts': [('CallableModule|0|',
        88),
        ('CallableModule|0|.__call__|0|',
         90)],
        'code-line': '\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 93,
        'sel-line-start': 3417,
        'selection_end': 3417,
        'selection_start': 3417,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/BCI_Competition_IV/Dataset_2a/fids.json'): {'attrib-starts': [],
        'code-line': '  }\n',
        'first-line': 68,
        'folded-linenos': [],
        'sel-line': 90,
        'sel-line-start': 1829,
        'selection_end': 1832,
        'selection_start': 1832,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/BCI_Competition_IV/__init__.py'): {'attrib-starts': [],
        'code-line': 'from . import Dataset_2a\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 14,
        'selection_start': 14,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/DUMMY/__init__.py'): {'attrib-starts': [('Database|0|',
        11)],
        'code-line': "        'tmin': -3,\n",
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 690,
        'selection_end': 708,
        'selection_start': 708,
        'zoom': 6},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/DUMMY/fids.json'): {'attrib-starts': [],
        'code-line': '  "DUMMY training": {\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 2,
        'selection_end': 22,
        'selection_start': 4,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/MI/__init__.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 2,
        'selection_end': 2,
        'selection_start': 2,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/__init__.py'): {'attrib-starts': [],
        'code-line': 'from ..base import DatabaseBase, ALL, load_fids, load_mat\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 66,
        'selection_end': 123,
        'selection_start': 115,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_BCI/fids.json'): {'attrib-starts': [],
        'code-line': '      "1-i9z-JORlKqjTb2B_-tzvUYCMkaRY2mS",\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 162,
        'selection_end': 204,
        'selection_start': 204,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_MI_ME/__init__.py'): {'attrib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 153,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_MI_ME/databases.py'): {'attrib-starts': [],
        'code-line': 'import json\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 111,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/GIGA_MI_ME/fids.json'): {'attrib-starts': [],
        'code-line': '  }\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 228,
        'sel-line-start': 4732,
        'selection_end': 4735,
        'selection_start': 4735,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/HighGamma_ME/__init__.py'): {'attrib-starts': [('Database|0|',
        12)],
        'code-line': "    fids = load_fids(os.path.join(os.path.dirname(__file__), 'fids.json'))\n",
        'first-line': 108,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 286,
        'selection_end': 294,
        'selection_start': 290,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/HighGamma_ME/fids.json'): {'attrib-starts': [],
        'code-line': '  }\n',
        'first-line': 110,
        'folded-linenos': [],
        'sel-line': 122,
        'sel-line-start': 2467,
        'selection_end': 2470,
        'selection_start': 2470,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/PhysioNet_MI_ME/__init__.py'): {'attrib-starts': [],
        'code-line': 'from ..base import DatabaseBase, ALL, load_fids, load_mat\n',
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 106,
        'selection_end': 163,
        'selection_start': 163,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/PhysioNet_MI_ME/fids.json'): {'attrib-starts': [],
        'code-line': '  }\n',
        'first-line': 6112,
        'folded-linenos': [],
        'sel-line': 6136,
        'sel-line-start': 130389,
        'selection_end': 130392,
        'selection_start': 130392,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/__init__.py'): {'attrib-starts': [],
        'code-line': ' \n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/__init__.py'): {'attrib-starts': [],
        'code-line': 'from .base import DatabaseBase, ALL, load_fids, load_mat\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 56,
        'selection_start': 56,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/base.py'): {'attrib-starts': [('load_mat|0|',
        33)],
        'code-line': '                return np.load(filepath)\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 1854,
        'selection_end': 1854,
        'selection_start': 1854,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/gcpds/databases/base/google_drive_downloader.py'): {'attrib-starts': [],
        'code-line': 'import requests\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../../../Development/GCPDS/python-gcpds.databases/test/test.py'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 235,
        'selection_end': 235,
        'selection_start': 235,
        'zoom': 0},
                       loc('../../../../../usr/lib/python3.9/json/decoder.py'): {'attrib-starts': [('JSONDecoder|0|',
        253),
        ('JSONDecoder|0|.raw_decode|0|',
         342)],
        'code-line': '            raise JSONDecodeError("Expecting value", s, err.value) from None\n',
        'first-line': 339,
        'folded-linenos': [],
        'sel-line': 354,
        'sel-line-start': 12371,
        'selection_end': 12371,
        'selection_start': 12371,
        'zoom': 0},
                       loc('gcpds/databases/EEG_data_raw/__init__.py'): {'attrib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gcpds/databases/EEG_data_raw/fids.json'): {'attrib-starts': [],
        'code-line': '{\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gcpds/databases/EEG_rawww/__init__.py'): {'attrib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gcpds/databases/EEG_rawww/fids.json'): {'attrib-starts': [],
        'code-line': '{\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('test/test.py'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 173,
        'selection_end': 173,
        'selection_start': 173,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('activate',
                      '/home/yeison/Development/BCI-Framework/venv/bin/activate')}
proj.pypath = {None: ('custom',
                      ['/home/yeison/Development/GCPDS/python-gcpds.databases/'])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-project-dir',
                                   'versioncontrol.bzr.executable': 'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
search.search-history = ['def non_task',
                         'non_task',
                         'format_runs',
                         ':=',
                         'runs_eva',
                         'runs_e',
                         'runs_',
                         'runs_te',
                         'runs_training',
                         'GIGA']
testing.stored-results = (1,
                          [],
                          {})
versioncontrol.git.remote-history = ['git@github.com:UN-GCPDS/python-gcpds.databases.git']
