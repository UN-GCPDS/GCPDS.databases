#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
cache.last-mime-type = {loc('test/test.py'): 'text/x-python'}
debug.breakpoints = {loc('gcpds/databases/base/base.py'): {41L: (0,
        None,
        1,
        0),
        43L: (0,
              None,
              1,
              0),
        45L: (0,
              None,
              1,
              0),
        56L: (0,
              None,
              1,
              0),
        62L: (0,
              None,
              1,
              0),
        68L: (0,
              None,
              1,
              0),
        75L: (0,
              None,
              1,
              0),
        77L: (0,
              None,
              1,
              0),
        79L: (0,
              None,
              1,
              0),
        80L: (0,
              None,
              1,
              0),
        82L: (0,
              None,
              1,
              0),
        83L: (0,
              None,
              1,
              0),
        86L: (0,
              None,
              1,
              0),
        92L: (0,
              None,
              1,
              0),
        98L: (0,
              None,
              1,
              0)}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Bcbqr2CDPglIvYWx9t597eE4fu'\
        '2X28OA',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.03601252609603345,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (0,
         0),
        (0,
         0,
         1),
        (0,
         0,
         1,
         0),
        (0,
         0,
         3),
        (0,
         0,
         5),
        (0,
         0,
         5,
         1),
        (1,)],
                                 'selected-nodes': [(0,
        0,
        1,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../BCI-Framework/venv/lib/python3.9/site-packages/scipy/io/matlab/mio.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../BCI-Framework/venv/lib/python3.9/site-packages/scipy/io/matlab/mio.py'),
                      'loadmat')]},
        loc('gcpds/databases/Auditory_processing/__init__.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/Auditory_processing/__init__.py'),
                      'CallableModule')]},
        loc('gcpds/databases/Auditory_processing/fids.json'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/BCI_Competition_IV/Dataset_2a/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/BCI_Competition_IV/Dataset_2a/__init__.py'),
                      'CallableModule')]},
        loc('gcpds/databases/BCI_Competition_IV/__init__.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/DUMMY/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/DUMMY/__init__.py'),
                      'CallableModule')]},
        loc('gcpds/databases/DUMMY/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/GIGA_BCI/MI/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/GIGA_BCI/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/GIGA_BCI/__init__.py'),
                      'ERP')]},
        loc('gcpds/databases/GIGA_BCI/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/GIGA_MI_ME/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/GIGA_MI_ME/__init__.py'),
                      'CallableModule')]},
        loc('gcpds/databases/GIGA_MI_ME/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/HighGamma_ME/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/HighGamma_ME/__init__.py'),
                      'CallableModule')]},
        loc('gcpds/databases/HighGamma_ME/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'),
                      'CallableModule')]},
        loc('gcpds/databases/PhysioNet_MI_ME/fids.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('gcpds/databases/base/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('gcpds/databases/base/base.py'),
                      '')]},
        loc('gcpds/databases/base/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('gcpds/databases/base/base.py'),
                      'ALL')]},
        loc('test/test.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('test/test.py'),
        'db')]},
        loc('../../../../../usr/lib/python3.9/json/decoder.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../usr/lib/python3.9/json/decoder.py'),
                      'BACKSLASH')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          3],
        'notebook_display': 'normal',
        'notebook_percent': 0.39496717724288843,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'GIGA',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': 'filepath\n',
                       'first-line': 14L,
                       'folded-linenos': [],
                       'history': {u'file:/home/yeison/Development/GCPDS/python-gcpds.databases/test/test.py': ['B'\
        'CI_Competition_IV\n',
        'BCI_Competition_IV.__builtins__\n',
        "load_fids(os.path.join(os.path.dirname(__file__), 'fids.json'))\n",
        'fids\n',
        'os.path.exists(filepath)\n',
        'filepath\n']},
                       'launch-id': None,
                       'sel-line': 27L,
                       'sel-line-start': 76818L,
                       'selection_end': 76826L,
                       'selection_start': 76826L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': "[f'CH-{ch}' for ch in range(1, 17)]\n",
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ["[f'CH-{ch}' for ch in range(1, 17"\
        ")]\n"]},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 131L,
                       'selection_end': 166L,
                       'selection_start': 131L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'),
        {'attrib-starts': [],
         'code-line': 'from ..base import DatabaseBase, ALL, load_fids, load'\
                      '_mat\n',
         'first-line': 41L,
         'folded-linenos': [],
         'sel-line': 7L,
         'sel-line-start': 106L,
         'selection_end': 163L,
         'selection_start': 163L,
         'zoom': 0L},
        1626400321.093958],
        [loc('test/test.py'),
         {'attrib-starts': [],
          'code-line': 'db = DUMMY()\n',
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 123L,
          'selection_end': 133L,
          'selection_start': 133L,
          'zoom': 0L},
         1626400361.50815],
        [loc('gcpds/databases/base/base.py'),
         {'attrib-starts': [('DatabaseBase|0|',
                             116),
                            ('DatabaseBase|0|.load_subject|0|',
                             155)],
          'code-line': '            raise Exception(f"Subject {subject} not '\
                       'in list of subjects.")\n',
          'first-line': 143L,
          'folded-linenos': [],
          'sel-line': 167L,
          'sel-line-start': 6082L,
          'selection_end': 6082L,
          'selection_start': 6082L,
          'zoom': 0L},
         1626400369.474779],
        [loc('gcpds/databases/DUMMY/__init__.py'),
         {'attrib-starts': [('Database|0|',
                             11),
                            ('Database|0|.load_subject|0|',
                             42)],
          'code-line': '\n',
          'first-line': 33L,
          'folded-linenos': [],
          'sel-line': 48L,
          'sel-line-start': 1496L,
          'selection_end': 1496L,
          'selection_start': 1496L,
          'zoom': 0L},
         1626400668.498457],
        [loc('test/test.py'),
         {'attrib-starts': [],
          'code-line': 'db.load_subject(2)\n',
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 5L,
          'sel-line-start': 146L,
          'selection_end': 163L,
          'selection_start': 163L,
          'zoom': 0L},
         1626400679.595625]],
        5),
        'current-loc': loc('gcpds/databases/base/base.py'),
        'editor-state-list': [(loc('gcpds/databases/base/base.py'),
                               {'attrib-starts': [('load_mat|0|',
        33)],
                                'code-line': '                pass\n',
                                'first-line': 52L,
                                'folded-linenos': [],
                                'sel-line': 65L,
                                'sel-line-start': 1915L,
                                'selection_end': 1935L,
                                'selection_start': 1935L,
                                'zoom': 0L}),
                              (loc('gcpds/databases/DUMMY/__init__.py'),
                               {'attrib-starts': [('Database|0|',
        11),
        ('Database|0|.load_subject|0|',
         42)],
                                'code-line': '\n',
                                'first-line': 33L,
                                'folded-linenos': [],
                                'sel-line': 48L,
                                'sel-line-start': 1496L,
                                'selection_end': 1496L,
                                'selection_start': 1496L,
                                'zoom': 0L}),
                              (loc('gcpds/databases/DUMMY/fids.json'),
                               {'attrib-starts': [],
                                'code-line': '}\n',
                                'first-line': 26L,
                                'folded-linenos': [],
                                'sel-line': 41L,
                                'sel-line-start': 854L,
                                'selection_end': 855L,
                                'selection_start': 855L,
                                'zoom': 0L}),
                              (loc('gcpds/databases/GIGA_BCI/__init__.py'),
                               {'attrib-starts': [('MI|0|',
        154),
        ('MI|0|.load_subject|0|',
         158)],
                                'code-line': '        data_, artifacts_ = su'\
        'per().load_subject(subject, mode)\n',
                                'first-line': 137L,
                                'folded-linenos': [],
                                'sel-line': 160L,
                                'sel-line-start': 6305L,
                                'selection_end': 6305L,
                                'selection_start': 6305L,
                                'zoom': 0L}),
                              (loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'),
                               {'attrib-starts': [],
                                'code-line': 'from ..base import DatabaseBas'\
        'e, ALL, load_fids, load_mat\n',
                                'first-line': 41L,
                                'folded-linenos': [],
                                'sel-line': 7L,
                                'sel-line-start': 106L,
                                'selection_end': 163L,
                                'selection_start': 163L,
                                'zoom': 0L}),
                              (loc('test/test.py'),
                               {'attrib-starts': [],
                                'code-line': 'db.load_subject(2)\n',
                                'first-line': 1L,
                                'folded-linenos': [],
                                'sel-line': 5L,
                                'sel-line-start': 146L,
                                'selection_end': 163L,
                                'selection_start': 163L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('gcpds/databases/base/base.py'),
         loc('gcpds/databases/DUMMY/__init__.py'),
         loc('gcpds/databases/DUMMY/fids.json'),
         loc('gcpds/databases/GIGA_BCI/__init__.py'),
         loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'),
         loc('test/test.py')]),
                               'open_files': [u'gcpds/databases/DUMMY/fids.json',
        u'gcpds/databases/PhysioNet_MI_ME/__init__.py',
        u'gcpds/databases/DUMMY/__init__.py',
        u'test/test.py',
        u'gcpds/databases/base/base.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.7712765957446809},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           5),
                          1626401028.845345),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.7516411378555798},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1626400236.403142),
                 'user_data': {}},
        'window-alloc': (410,
                         475,
                         1280,
                         690)}]}
guimgr.recent-documents = [loc('gcpds/databases/base/base.py'),
                           loc('test/test.py'),
                           loc('gcpds/databases/DUMMY/__init__.py'),
                           loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'),
                           loc('gcpds/databases/DUMMY/fids.json'),
                           loc('gcpds/databases/GIGA_BCI/__init__.py')]
guimgr.visual-state = {loc('gcpds/databases/Auditory_processing/__init__.py'): {'a'\
        'ttrib-starts': [('Database|0|',
                          11)],
        'code-line': '                          1, 1, 1],\n',
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1087L,
        'selection_end': 1122L,
        'selection_start': 1122L,
        'zoom': 0L},
                       loc('gcpds/databases/Auditory_processing/fids.json'): {'a'\
        'ttrib-starts': [],
        'code-line': '  }\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 96L,
        'sel-line-start': 2360L,
        'selection_end': 2363L,
        'selection_start': 2363L,
        'zoom': 0L},
                       loc('gcpds/databases/BCI_Competition_IV/Dataset_2a/__init__.py'): {'a'\
        'ttrib-starts': [('CallableModule|0|',
                          88),
                         ('CallableModule|0|.__call__|0|',
                          90)],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 93L,
        'sel-line-start': 3417L,
        'selection_end': 3417L,
        'selection_start': 3417L,
        'zoom': 0L},
                       loc('gcpds/databases/BCI_Competition_IV/Dataset_2a/fids.json'): {'a'\
        'ttrib-starts': [],
        'code-line': '  }\n',
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 90L,
        'sel-line-start': 1829L,
        'selection_end': 1832L,
        'selection_start': 1832L,
        'zoom': 0L},
                       loc('gcpds/databases/BCI_Competition_IV/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from . import Dataset_2a\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 14L,
        'selection_start': 14L,
        'zoom': 0L},
                       loc('gcpds/databases/DUMMY/__init__.py'): {'attrib-st'\
        'arts': [('Database|0|',
                  11),
                 ('Database|0|.non_task|0|',
                  87)],
        'code-line': '\n',
        'first-line': 96L,
        'folded-linenos': [],
        'sel-line': 96L,
        'sel-line-start': 3804L,
        'selection_end': 4138L,
        'selection_start': 3804L,
        'zoom': 0L},
                       loc('gcpds/databases/GIGA_BCI/MI/__init__.py'): {'att'\
        'rib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 2L,
        'selection_end': 2L,
        'selection_start': 2L,
        'zoom': 0L},
                       loc('gcpds/databases/GIGA_BCI/__init__.py'): {'attrib'\
        '-starts': [],
        'code-line': 'from ..base import DatabaseBase, ALL, load_fids, load_'\
                     'mat\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 66L,
        'selection_end': 123L,
        'selection_start': 115L,
        'zoom': 0L},
                       loc('gcpds/databases/GIGA_BCI/fids.json'): {'attrib-s'\
        'tarts': [],
        'code-line': '      "1-i9z-JORlKqjTb2B_-tzvUYCMkaRY2mS",\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 162L,
        'selection_end': 204L,
        'selection_start': 204L,
        'zoom': 0L},
                       loc('gcpds/databases/GIGA_MI_ME/__init__.py'): {'attr'\
        'ib-starts': [],
        'code-line': 'import os\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 153L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('gcpds/databases/GIGA_MI_ME/databases.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import json\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 111L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('gcpds/databases/GIGA_MI_ME/fids.json'): {'attrib'\
        '-starts': [],
        'code-line': '  }\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 228L,
        'sel-line-start': 4732L,
        'selection_end': 4735L,
        'selection_start': 4735L,
        'zoom': 0L},
                       loc('gcpds/databases/HighGamma_ME/__init__.py'): {'at'\
        'trib-starts': [('Database|0|',
                         12)],
        'code-line': "    fids = load_fids(os.path.join(os.path.dirname(__fi"\
                     "le__), 'fids.json'))\n",
        'first-line': 108L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 286L,
        'selection_end': 294L,
        'selection_start': 290L,
        'zoom': 0L},
                       loc('gcpds/databases/HighGamma_ME/fids.json'): {'attr'\
        'ib-starts': [],
        'code-line': '  }\n',
        'first-line': 110L,
        'folded-linenos': [],
        'sel-line': 122L,
        'sel-line-start': 2467L,
        'selection_end': 2470L,
        'selection_start': 2470L,
        'zoom': 0L},
                       loc('gcpds/databases/PhysioNet_MI_ME/__init__.py'): {'a'\
        'ttrib-starts': [('Database|0|',
                          11)],
        'code-line': '                    ],\n',
        'first-line': 121L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 1261L,
        'selection_end': 1281L,
        'selection_start': 1281L,
        'zoom': 0L},
                       loc('gcpds/databases/PhysioNet_MI_ME/fids.json'): {'a'\
        'ttrib-starts': [],
        'code-line': '  }\n',
        'first-line': 6112L,
        'folded-linenos': [],
        'sel-line': 6136L,
        'sel-line-start': 130389L,
        'selection_end': 130392L,
        'selection_start': 130392L,
        'zoom': 0L},
                       loc('gcpds/databases/__init__.py'): {'attrib-starts': [],
        'code-line': ' \n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('gcpds/databases/base/__init__.py'): {'attrib-sta'\
        'rts': [],
        'code-line': 'from .base import DatabaseBase, ALL, load_fids, load_m'\
                     'at\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 56L,
        'selection_start': 56L,
        'zoom': 0L},
                       loc('gcpds/databases/base/base.py'): {'attrib-starts': [('l'\
        'oad_fids|0|',
        27)],
        'code-line': "    return json.load(open(file, 'rb'))\n",
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 705L,
        'selection_end': 705L,
        'selection_start': 705L,
        'zoom': 0L},
                       loc('gcpds/databases/base/google_drive_downloader.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import requests\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('test/test.py'): {'attrib-starts': [],
        'code-line': 'from gcpds.databases import GIGA_MI_ME, BCI_Competitio'\
                     'n_IV, HighGamma_ME, GIGA_BCI\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../../usr/lib/python3.9/json/decoder.py'): {'a'\
        'ttrib-starts': [('JSONDecoder|0|',
                          253),
                         ('JSONDecoder|0|.raw_decode|0|',
                          342)],
        'code-line': '            raise JSONDecodeError("Expecting value", s'\
                     ', err.value) from None\n',
        'first-line': 339L,
        'folded-linenos': [],
        'sel-line': 354L,
        'sel-line-start': 12371L,
        'selection_end': 12371L,
        'selection_start': 12371L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('activate',
                      '/home/yeison/Development/BCI-Framework/venv/bin/activ'\
                      'ate')}
proj.pypath = {None: ('custom',
                      [u'/home/yeison/Development/GCPDS/python-gcpds.databases/'])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'GIGA']
testing.stored-results = (1,
                          [],
                          {})
